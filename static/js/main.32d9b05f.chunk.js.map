{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pageButtons","isfirstPage","islastPage","_jsxs","className","children","_jsx","classNames","disabled","href","onClick","map","page","active","concat","handlePageChangeIfDifferent","items","App","_useState","useState","_useState2","_slicedToArray","setCurrentPage","_useState3","_useState4","setPerPage","firstItem","lastItem","length","preparedItems","slice","id","value","onChange","e","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32d9b05f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pageButtons = getNumbers(1, pageCount);\n  const isfirstPage = currentPage === 1;\n  const islastPage = currentPage === pageCount;\n\n  const handlePrevButton = () => {\n    if (!isfirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextButton = () => {\n    if (!islastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const handlePageChangeIfDifferent = (page: number) => {\n    if (currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: isfirstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isfirstPage}\n          onClick={handlePrevButton}\n        >\n          «\n        </a>\n      </li>\n\n      {pageButtons.map(page => (\n        <li\n          key={page}\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            aria-disabled={isfirstPage}\n            onClick={() => handlePageChangeIfDifferent(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: islastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={islastPage}\n          onClick={handleNextButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = currentPage * perPage < items.length\n    ? currentPage * perPage\n    : items.length;\n\n  const handleSelectPage = (value: number) => {\n    setPerPage(value);\n    setCurrentPage(1);\n  };\n\n  const preparedItems = items.slice(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => handleSelectPage(Number(e.target.value))}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {preparedItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}